{# View Header #}
{% macro section_title(title, description, small='', breadcrumb=[]) %}
    <h1 class="pum-view_title pum-scheme-text_colored">
        {{ title|humanize|raw }}
        {% if small is defined and small != '' %}
            <small>{{ small|humanize|title|raw }}</small>
        {% endif %}
    </h1>
    {% if breadcrumb|length > 0 %}
        {% set tmp_small_class = ' wbcrmb' %}
        {% set breadcrumb_limit = breadcrumb|length - 1 %}
    {% else %}
        {% set tmp_small_class = '' %}
    {% endif %}
    {% if description is defined and description != '' %}
        <small class="text-muted{{ tmp_small_class }}">{{ description|raw }}</small>
    {% elseif breadcrumb_limit is defined %}
        <small class="text-muted{{ tmp_small_class }}">{{ breadcrumb[breadcrumb_limit].text|humanize|raw }}</small>
    {% endif %}

    {% if breadcrumb|length > 0 %}
        <ul class="breadcrumb">
            {% for key, link in breadcrumb %}
                {% if key == breadcrumb_limit %}
                    <li class="active">{{ link.text|raw }}</li>
                {% else %}
                    <li><a href="{{ link.href }}">{{ link.text|raw }}</a></li>
                {% endif %}
            {% endfor %}
        </ul>
    {% endif %}
{% endmacro %}

{# Collapsed List for long list items in Table View #}
{% macro collapsed_list(id, items, title = ['item', 'items'], limit = 5, format = false) %}
    {% if items|length >= limit %}
        <div id="{{ id }}" class="pum-simple_expand">
            <a class="accordion-toggle" data-toggle="collapse" data-parent="#{{ id }}" href="#expand_{{ id }}">
                {{ items|length }}
                {% if items|length < 2 %}
                    {{ title.0 }}
                {% else %}
                    {{ title.1 }}
                {% endif %}
            </a>
            <div class="accordion-body collapse" id="expand_{{ id }}">
                <ul class="list-unstyled list-spaced">
                    {% if format == 'code' %}
                        {% for item in items %}
                            <li><code>{{ item.name }}</code></li>
                        {% endfor %}
                    {% elseif format == 'strong' %}
                        {% for item in items %}
                            <li><strong>{{ item.name }}</strong></li>
                        {% endfor %}
                    {% else %}
                        {% for item in items %}
                            <li>{{ item.name }}</li>
                        {% endfor %}
                    {% endif %}
                </ul>
            </div>
        </div>
    {% else %}
        <ul class="list-unstyled list-spaced">
            {% if format == 'code' %}
                {% for item in items %}
                    <li><code>{{ item.name }}</code></li>
                {% endfor %}
            {% elseif format == 'strong' %}
                {% for item in items %}
                    <li><strong>{{ item.name }}</strong></li>
                {% endfor %}
            {% else %}
                {% for item in items %}
                    <li>{{ item.name }}</li>
                {% endfor %}
            {% endif %}
        </ul>
    {% endif %}
{% endmacro %}

{# Pagination #}
{% macro pager(pager) %}
    {% set queries = app.request.query.all|sort %}

    <div class="text-center">
        <ul class="pagination">
            {% if pager.currentPage == 1 %}
                <li class="disabled"><a href="#">&laquo;</a></li>
            {% else %}
                <li><a href="?{{ queries|merge({page: pager.currentPage - 1})|url_encode }}">&laquo;</a></li>
            {% endif %}
            {% for page in 1..pager.nbPages %}
                {% if page == pager.currentPage %}
                    <li class="active">
                        <a>{{ page }}</a>
                    </li>
                {% else %}
                    <li>
                        <a href="?{{ queries|merge({page: page})|url_encode }}">{{ page }}</a>
                    </li>
                {% endif %}
            {% endfor %}
            {% if pager.currentPage == pager.nbPages %}
                <li class="disabled"><a href="#">&raquo;</a></li>
            {% else %}
                <li><a href="?{{ queries|merge({page: pager.currentPage + 1})|url_encode }}">&raquo;</a></li>
            {% endif %}
        </ul>
    </div>
{% endmacro %}

{% macro paginationChoices(currentItemPerPage, pagination_values) %}
    {% set queries = app.request.query.all|sort %}

    <button data-toggle="dropdown" class="btn btn-primary btn-sm dropdown-toggle" type="button"><i class="pumicon pumicon-ellipsis"></i> {{ currentItemPerPage }} items per page <span class="caret"></span></button>
    <ul role="menu" class="dropdown-menu">
        {% for itemPerPage in pagination_values %}
            <li class="{{ currentItemPerPage == itemPerPage ? 'disabled' : '' }}"><a class="pagination-changer" data-value="{{ itemPerPage }}" href="?{{ queries|merge({per_page: itemPerPage, page: null})|url_encode }}">{{ itemPerPage }} items per page</a></li>
        {% endfor %}
    </ul>
{% endmacro %}

{# Sort #}
{% macro sort(field, field_name=null) %}
    {% if field_name == null %}
        {% set field_name = field|lower %}
    {% endif %}

    {% set sortClassList = { 'asc': 'headerSortUp', 'desc': 'headerSortDown'} %}
    {% set queries = app.request.query.all|sort %}
    {% set type = 'asc' %}

    {% if queries.sort is defined and queries.sort == field_name %}
        {% if queries.order is defined and sortClassList[queries.order] is defined %}
            {% set sortClass = sortClassList[queries.order] %}
            {% if queries.order == 'asc' %}
                {% set type = 'desc' %}
            {% endif %}
        {% endif %}
    {% endif %}

    <a href="?{{ queries|merge({sort: field, order: type})|url_encode }}" class="{{ sortClass|default('') }}">
        {{ field|title }}
    </a>
{% endmacro %}

{# TableView #}
{% macro viewChoices(views, beam, object_definition) %}
    {% set queries     = app.request.query.all|sort %}
    {% set defaultView = 'Default' %}
    {% set currentView = app.request.query.get('view')|default(defaultView) %}

    <button data-toggle="dropdown" class="btn btn-inverse btn-sm dropdown-toggle" type="button">
        <i class="pumicon pumicon-layout-7"></i>&nbsp;
            {% if currentView != defaultView %}
                {{ currentView|humanize|title }}
            {% else %}
                Change view
            {% endif %}
        <span class="caret"></span>
    </button>
    <ul role="menu" class="dropdown-menu">
        <li role="presentation" class="dropdown-header">Views list</li>
        {% for view in views %}
            {% if view.name == currentView %}
                {% set elClass = 'disabled' %}
                {% set elHref  = '#' %}
                {% set elViewCheck = ' <i class="pumicon pumicon-checkmark-6"></i>' %}
                {% set elTooltip = ' data-toggle="tooltip" title="It\'s your current view" data-placement="left"' %}
            {% else %}
                {% set elClass = '' %}
                {% set elHref  = '?' ~ queries|merge({view: view.name})|url_encode %}
                {% set elViewCheck = '' %}
                {% set elTooltip = '' %}
            {% endif %}

            <li class="{{ elClass }}">
                <a class="view-changer" data-value="{{ view.name }}" href="{{ elHref }}"{{ elTooltip|raw }}>{{ view.name|humanize|title }}{{ elViewCheck|raw }}</a>
            </li>
        {% endfor %}

        {% if is_granted('ROLE_PA_VIEW_EDIT') and currentView != defaultView %}
            <li role="presentation" class="divider"></li>
            <li role="presentation" class="dropdown-header">Current view</li>
            <li role="presentation">
                <a href="{{ path('pa_tableview_edit', {beamName: beam.name, name: object_definition.name, tableViewName: currentView}) }}"><i class="pumicon pumicon-pencil"></i> Edit</a>
            </li>
            <li role="presentation">
                <a data-cancel="Cancel" data-confirm="Delete" data-text='Are you sure to delete this tableView "{{ currentView }}" ?' href="{{ path('pa_tableview_delete', {beamName: beam.name, name: object_definition.name, tableViewName: currentView}) }}"><i class="pumicon pumicon-minus-5"></i> Delete</a>
            </li>
        {% endif %}

        {% if is_granted('ROLE_PA_VIEW_EDIT') %}
            <li role="presentation" class="divider"></li>
            <li role="presentation">
                <a href="{{ path('pa_tableview_create', {beamName: beam.name, name: object_definition.name}) }}"><i class="pumicon pumicon-plus-5"></i> Create view</a>
            </li>
            <!-- <li><a class="view-create" href="#">Create a new view</a></li> -->
        {% endif %}
    </ul>
{% endmacro %}

{# Confirmation message #}
{#
    TODO:
    - Group Confirmations in a single alert
    - Display Error color code on each item
#}

{% macro alertMessages() %}
    {% set formMessages = {
        danger: app.session.flashbag.get('message_error'),
        warning: app.session.flashbag.get('message_warning'),
        success: app.session.flashbag.get('message_success')
    } %}

    {% for typeMessage,listMessages in formMessages %}
        {% if listMessages|length > 0 %}
            <div class="alert alert-dismissable alert-{{ typeMessage }}">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                <ul>
                    {% for singleMessage in listMessages %}
                        <li>{{ singleMessage }}</li>
                    {% endfor %}
                </ul>
            </div>
        {% endif %}
    {% endfor %}
{% endmacro %}
