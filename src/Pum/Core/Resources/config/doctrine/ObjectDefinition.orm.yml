Pum\Core\Definition\ObjectDefinition:
    type: entity
    table: schema_object
    id:
        id:
            type: integer
            generator:
                strategy: AUTO
    fields:
        name:
            type: string
            length: 100
            unique: true
        alias:
            type: string
            length: 100
            nullable: true
        classname:
            type: string
            length: 100
            nullable: true
        repositoryClass:
            type: string
            length: 100
            nullable: true
        seoEnabled:
            type: boolean
        seoOrder:
            type: integer
            nullable: true
        seoTemplate:
            type: string
            length: 1024
            nullable: true
        securityUserEnabled:
            type: boolean
        searchEnabled:
            type: boolean
        treeEnabled:
            type: boolean
    oneToMany:
        fields:
            targetEntity: FieldDefinition
            mappedBy: object
            indexBy: name
            orphanRemoval: true
            cascade: [ persist, remove ]
            fetch: EXTRA_LAZY
        tableViews:
            targetEntity: Pum\Core\Definition\View\TableView
            mappedBy: objectDefinition
            orphanRemoval: true
            cascade: [ persist, remove ]
            fetch: EXTRA_LAZY
        objectViews:
            targetEntity: Pum\Core\Definition\View\ObjectView
            mappedBy: objectDefinition
            orphanRemoval: true
            cascade: [ persist, remove ]
            fetch: EXTRA_LAZY
        formViews:
            targetEntity: Pum\Core\Definition\View\FormView
            mappedBy: objectDefinition
            orphanRemoval: true
            cascade: [ persist, remove ]
            fetch: EXTRA_LAZY
        searchFields:
            targetEntity: Pum\Core\Definition\SearchField
            mappedBy: objectDefinition
            orphanRemoval: true
            cascade: [ persist, remove ]
            fetch: EXTRA_LAZY
    manyToOne:
        seoField:
            targetEntity: FieldDefinition
            joinColumn:
                name: seo_field_id
                referencedColumnName: id
                nullable: true
                onDelete: SET NULL
            cascade: [remove]
        securityUsernameField:
            targetEntity: FieldDefinition
            joinColumn:
                name: security_username_field_id
                referencedColumnName: id
                nullable: true
                onDelete: SET NULL
        securityPasswordField:
            targetEntity: FieldDefinition
            joinColumn:
                name: security_password_field_id
                referencedColumnName: id
                nullable: true
                onDelete: SET NULL
        beam:
            targetEntity: Beam
            inversedBy:   objects
            joinColumn:
                name: schema_beam_id
                referencedColumnName: id
                nullable: false
                onDelete: CASCADE
    oneToOne:
        tree:
            targetEntity: Tree
            orphanRemoval: true
            cascade: [ persist, detach ]
            joinColumn:
                name:  schema_object_tree_id
                referencedColumnName: id
                onDelete: SET NULL
